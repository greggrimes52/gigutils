.TH genbf 1 "31 July 1995" "GIG's Utilities" "Version 1.05"
.SH NAME
genbf - GENerate a Binary File.
.SH SYNOPSIS
genbf [flags] filename
.SH DESCRIPTION
Writes the specified file with a set of patterns
of characters suitable for testing other
file manipulation utilities.

This utility was written to generate files
on which to test other utilities such as
DISF, COMF, and ZAPF.
To do so, these test files needed to contain
all possible character codes from 0 to 255,
in ascending ("forward") and descending ("reverse") order.
In addition, they needed to contain blocks of identical characters.
The test file is generated based on the values of
command line flags.
The -R flag controls the number of "reverse" blocks,
while -F controls the number of "forward" blocks.
Blocks of identical characters are controlled by the
-B, -C, and -L flags which specify
the number, character code, and size of each block,
respectively.

The flags are processed in the order -R, -B/-C/-L, -F.
That is, reverse blocks are written first,
custom or user defined blocks are written second,
and forward blocks are written last.
If no flags are specified to indicate the number
and types of blocks to write to the specified file,
then a default set of flags is used:

   -R1 -B2 -C33 -L256 -F1

That is,
one 256 byte reverse block
is followed by
two 256 byte blocks containing "!" characters (decimal 33)
and these are followed by
one 256 byte forward block,
for a total of 1024 bytes written. 
.SH PARAMETERS
.TP 12
-Rn
Specifies that <n> blocks of all characters
in reverse order (0xFF through 0x00)
are to be written to the file.
.TP
-Bn
Specifies that <n> user specified blocks
are to be written to the file.
The size of these blocks are specified by the -L switch,
and the contents of these blocks are specified by the -C
switch.
.TP
-Cn
Specifies that the user specified blocks
are to contain the character whose decimal value is <n>
replicated throughout the block.
Therefore, the value of <n> must be
the value of an unsigned character,
between 0 and 255, inclusive.
.TP
-Ln
Specifies that the user specified blocks
are to be <n> bytes long.
The value of <n> must be greater than one (1),
and is arbitrarily limited by the size of a
two byte signed integer, or 32767.
.TP
-Fn
Specifies that <n> blocks of all characters
in ascending ("forward") order (0x00 through 0xFF)
are to be written to the file.
.TP
-V
Specifies that information concerning the
internal operation of the utility is to be
written to stdout.
This "verbose" output is normally used to debug the utility.
.SH EXAMPLES
To generate a simple binary test file, use the default switches.

   % genbf xxx
   Generate binary file named "xxx".
      No block types specified.   Using -R1 -B2 -C33 -L256 -F1.

This creates a 1024 byte file described above.
A simpler file containing all 256 possible bytes
can be generated by specifying one switch.

   % genbf -f xxx
   Generate binary file named "xxx".

This creates a 256 byte file containing one "forward" block,
that is, all bytes starting with 0x00 through 0xFF.

GENBF has other uses than just creating test files.
For example, the following command line can be used on a PC
to scrub a 3.5" HD diskette one track at a time.

   C:\\>GENBF A:X -L9216 -B158 -C33

It writes 158 blocks, the number of data tracks,
that are 9216 bytes long, the size of each track,
filled with character 33 (0x21 is bang!).
.SH "SEE ALSO"
comf(1),
cvtbt(1),
cvttb(1),
disf(1),
zapf(1).
.SH BUGS
Due to the mechanism by which command line switches are processed,
there currently isn't a simple way to control the order in which
blocks are written to the binary file by simple arrangement of the
command line switches.

It would be nice to be able to specify more complex blocks than
just simple chunks of the same character.
Patterns other than all bytes ascending and descending would be
nice, too.
.SH AUTHOR
Greg Grimes <sasgig@unx.sas.com>
