.TH cvttb 1 "31 July 1995" "GIG's Utilities" "Version 1.05"
.SH NAME
cvttb - ConVerT Text to Binary.
.SH SYNOPSIS
cvttb [flags] txtfile binfile
.SH DESCRIPTION
This is a partner utility to CVTBT.
It converts a file containing the special codes
produced by CVTBT back into a binary file
containing the characters represented by those codes.

The CVTBT utility produces multi-byte character codes
for unprintable (uneditable) characters,
and also for printable ones.
These codes are always enclosed in square brackets, [],
and are either character names or numeric codes in
hex, decimal, or octal format.
Hex numeric codes always begin with "0x"
followed by one or two hex digits.
Decimal codes may begin with "0d"
to explicitly indicate a decimal number,
or may simply be the digits of the decimal constant
without a leading zero (0),
just like decimal constants in C.
Octal codes may begin with "0o"
to explicitly indicate an octal number,
or may simply be the digits of the octal constant
with a leading zero (0),
just like octal constants in C.
The character names generated by the CVTBT utility,
and recognized by the CVTTB utility,
are shown in the following table.

   Name    Octal   Decimal    Hex     Description
   -----   -----   -------   ------   -----------
   [NUL]   [000]      [0]    [0x00]
   [SOH]   [001]      [1]    [0x01]
   [STX]   [002]      [2]    [0x02]
   [ETX]   [003]      [3]    [0x03]
   [EOT]   [004]      [4]    [0x04]
   [ENQ]   [005]      [5]    [0x05]
   [ACK]   [006]      [6]    [0x06]
   [BEL]   [007]      [7]    [0x07]
   [BS]    [010]      [8]    [0x08]   Backspace
   [HT]    [011]      [9]    [0x09]   Tab
   [LF]    [012]     [10]    [0x0A]   Line feed or Newline
   [VT]    [013]     [11]    [0x0B]
   [FF]    [014]     [12]    [0x0C]   Form feed or page eject
   [CR]    [015]     [13]    [0x0D]   Carriage return
   [SO]    [016]     [14]    [0x0E]
   [SI]    [017]     [15]    [0x0F]
   [DLE]   [020]     [16]    [0x10]
   [DC1]   [021]     [17]    [0x11]
   [DC2]   [022]     [18]    [0x12]
   [DC3]   [023]     [19]    [0x13]
   [DC4]   [024]     [20]    [0x14]
   [NAK]   [025]     [21]    [0x15]
   [SYN]   [026]     [22]    [0x16]
   [ETB]   [027]     [23]    [0x17]
   [CAN]   [030]     [24]    [0x18]
   [EM]    [031]     [25]    [0x19]
   [SUB]   [032]     [26]    [0x1A]
   [ESC]   [033]     [27]    [0x1B]   Escape
   [FS]    [034]     [28]    [0x1C]
   [GS]    [035]     [29]    [0x1D]
   [RS]    [036]     [30]    [0x1E]
   [US]    [037]     [31]    [0x1F]
   [SP]    [040]     [32]    [0x20]   Space
   [LB]   [0133]     [91]    [0x5B]   Left Square Bracket
   [RB]   [0135]     [93]    [0x5D]   Right Square Bracket
   [DEL]  [0177]    [127]    [0x7F]

Because square brackets are used to delimit character codes,
they cannot represent themselves in the text file to be
converted to binary.
Instead they must be represented by their names, [LB] and [RB],
or by the corresponding numeric codes shown in the above table.
Also, to make the files easy to manipulate in a text editor,
white space characters cannot be used
to represent their corresponding binary characters,
so those characters must also be represented
by their names or numeric codes.
This includes the blank or space character represented by [SP].
.SH PARAMETERS
The command line arguments for CVTTB
are two file specifications and an optional flag.
The first file specification is the file containing
the multi-byte character codes produced by CVTBT,
the input file.
The second file specification names
the binary file to generate,
the output file.
The following flag may be used to
control the conversion process.
.TP 12
--S
Suppress the summary messages.
.SH EXAMPLES
You want to create a file containing
five non-byte-swapped 32 bit integers
containing the numbers zero through four.

   % cat > text
   [0][0][0][0]
   [0][0][0][1]
   [0][0][0][2]
   [0][0][0][3]
   [0][0][0][4]
   ^D
   % cvttb text bin
   Converting text file "text" into binary image "bin".
          80 byte(s) read  from text
          20 byte(s) written to bin
   % disf bin
   Hex dump file "bin"
     0 /    0:  00000000 00000001  00000002 00000003  ................
    16 /   10:  00000004                              ....            
.SH "SEE ALSO"
comf(1),
cvtbt(1),
disf(1),
genbf(1),
zapf(1).
.SH BUGS
CVTTB recognizes several kinds of character codes
enclosed in square brackets,
and even though you can mix them in the same
text file, CVTTB is pretty unforgiving if it
doesn't recognize a character code between square brackets.
You probably won't be happy with the resulting
binary file it produces when this happens.
.SH AUTHOR
Greg Grimes <sasgig@unx.sas.com>
